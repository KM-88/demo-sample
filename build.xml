<project name="MyProject" default="dist" basedir=".">
	<description>
	Sample Demo Java Project for Ant Build
	</description>
	<!-- set global properties for this build -->
	<property name="src" location="src"/>
	<property name="build" location="build"/>
	<property name="dist" location="dist"/>

	<property name="src.main" location="${src}/main/java"/>
	<property name="src.test" location="${src}/test/java"/>
	<property name="build.main" location="${build}/main"/>
	<property name="build.test" location="${build}/test"/>

	<property name="output.dir" value="${basedir}/build" />
	<property name="src.test.dir" value="${basedir}/src/test" />
	<property name="build.classes.dir" value="${output.dir}/test" />

	<target name="init">
		<!-- Create the time stamp -->
		<tstamp/>
		<!-- Create the build directory structure used by compile -->
		<mkdir dir="${build}"/>
	</target>

	<path id="classpath.base" >
		<fileset dir="${basedir}/lib/common/"/>
		<!--
		<pathelement location="lib/log4j-1.2.14.jar"/>
		<pathelement location="lib/hibernate-core-5.3.7.Final.jar" />
		<pathelement location="lin/hibernate-commons-annotations-5.0.4.Final.jar" />
		<pathelement location="lib/mysql-connector-java-8.0.13.jar" />
		<pathelement location="lib/javax.persistence-api-2.2.jar" />
		-->
	</path>
	<!--
	<path id="classpath.test">
		<pathelement location="lib/junit-jupiter-api-5.3.1.jar" />
		<pathelement location="lib/junit-jupiter-engine-5.3.1.jar"/>
		<pathelement location="lib/junit-jupiter-params-5.3.1.jar" />
		<pathelement location="${build.main}"/>
		<path refid="classpath.base" />
	</path>
	-->

	<path id="junit.platform.libs.classpath">
		<fileset dir="${basedir}/lib/junit-platform/"/>
	</path>

	<path id="junit.engine.jupiter.classpath">
		<fileset dir="${basedir}/lib/jupiter/"/>
	</path>

	<target name="compile-test" depends="init">
		<mkdir dir="${build.classes.dir}" />
		<javac srcdir="${src.test.dir}" destdir="${build.classes.dir}">
			<!-- our tests only need JUnit Jupiter engine
	           libraries in our compile classpath for the tests -->
			<classpath refid="junit.engine.jupiter.classpath" />
			<classpath refid="classpath.base" />
			<classpath>
				<!-- the src classes themselves -->
				<pathelement location="${build.main}" />
			</classpath>
		</javac>
	</target>

	<target name="test" depends="compile, compile-test">
		<junitlauncher haltOnFailure="true" printSummary="true">
			<!-- include the JUnit platform related libraries
	            required to run the tests -->
			<classpath refid="junit.platform.libs.classpath"/>

			<!-- include the JUnit Jupiter engine libraries -->
			<classpath refid="junit.engine.jupiter.classpath"/>

			<classpath>
				<!-- the test classes themselves -->
				<pathelement location="${build.classes.dir}"/>
			</classpath>
			<testclasses outputdir="${output.dir}">
				<fileset dir="${build.classes.dir}">
				 	<include name="**/*Tests.class" />
				</fileset>
				<listener type="legacy-brief" sendSysErr="true" sendSysOut="true"/>
				<listener type="legacy-xml" sendSysErr="true" sendSysOut="true"/>
			</testclasses>
		</junitlauncher>
	</target>

	<target name="compile" depends="init"
		description="compile the source">
		<mkdir dir="${build.main}"/>
		<echo message="Compiling main source"/>
		<!-- Compile the Java code from ${src} into ${build} -->
		<javac srcdir="${src.main}" destdir="${build.main}">
			<classpath refid="classpath.base" />
		</javac>
	</target>

	<!--
	<target name="compile-test" depends="compile" description="Compile the test classes">
		<echo message="Compiling test classes" />
		<mkdir dir="${build.test}" />
		<javac srcdir="${src.test}" destdir="${build.test}" includeantruntime="false">
			<classpath refid="classpath.test" />
		</javac>
		<echo message="Test Build done!" />
	</target>
-->
	<target name="dist" depends="compile"
        description="generate the distribution">
		<!-- Create the distribution directory -->
		<mkdir dir="${dist}/lib"/>

		<!-- Put everything in ${build} into the MyProject-${DSTAMP}.jar file -->
		<jar jarfile="${dist}/lib/DemoSample-${DSTAMP}.jar" basedir="${build}"/>
	</target>

	<!--
	<target name="test" depends="run, clean" >
		<echo message="Target=[test] - Running Test " />
	</target>
	<target name="run" depends="compile-test" >
		<junit printsummary="on" haltonfailure="yes">
			<classpath>
				<path refid="classpath.test" />
				<pathelement location="${build.test}" />
			</classpath>
			<formatter type="brief" usefile="false" />
			<batchtest>
				<fileset dir="${src.test}" includes="**/*Test*.java" />
			</batchtest>
		</junit>
	</target>
-->
	<target name="clean"
        description="clean up">
		<!-- Delete the ${build} and ${dist} directory trees -->
		<delete dir="${build}"/>
		<delete dir="${dist}"/>
	</target>
</project>
